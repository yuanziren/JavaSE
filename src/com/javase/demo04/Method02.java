package com.javase.demo04;
/**  
	方法:具有某些功能的代码块
	方法的作用:
				封装内部的实现细节,提高代码的复用性
	方法的注意事项:
				1.方法要定义在类中,方法外,方法不能嵌套
				2.方法不调用不执行
				
	语法:
		有返回值类型的方法
			修饰符 返回值类型 方法名([参数列表]){
				方法体语句;
				return 返回值;
			}
			修饰符:访问权限修饰符,能访问的范围,现在默认public static
			返回值类型:方法运算完成后,结果的数据类型,与return后面的返回值类型对应
				基本数据类型|引用数据类型
			方法名: 调用方法的时候需要使用方法名调用
				    遵循标识符的命名规则|规范 第一个单词小写,第二个单词开始每歌单词首字母大写
			()->参数列表  
				可有可无的参数列表
				参数列表中可以有多个参数
				在方法执行过程中,有没有未知的数据,如果有,定义在参数列表中
				参数列表:数据类型 变量名,数据类型 变量名 .... 
				参数:相当于一个局部变量的声明
			{}->具体功能的代码块
			return:提前结束方法 ,带出返回值
					如果是一个有返回值类型的方法,必须存在return,return后面必须带有返回值
		
		没有返回值类型的方法
		
		
		方法的调用:执行方法中的代码  方法名([参数列表]);  
			有返回值类型的方法
				1.赋值调用 
					数据类型 变量名 = 方法名(参数列表);
				2.输出调用
					System.out.println(方法名(参数列表));
				3.直接调用
					方法名([参数列表]); 
					
		参数:
			形式参数:定义方法时候()中的参数
			实际参数:调用方法的时候()中的参数值
			形参和实参之间要一一对应
				数据类型 顺序 个数
			有形参就必须有实参
			
*/
public class Method02{ 
	//程序的入口
	public static void main(String[] args){
		//1.直接调用  --不推荐使用,因为无法使用返回值
		getPI();
		//2.输出调用
		System.out.println(getPI());
		//3.赋值调用
		double d=getPI();
		System.out.println(d);
		
		//求两个数的和
		System.out.println(getSum(5,7));
	}
	
	//需求:返回pi的值  返回值:需要返回值 double   参数:没有参数
	//有返回类型没有参数的方法
	public static double getPI(){
		System.out.println("有返回类型没有参数的方法");
		return 3.1415926;
	}
	
	//需求: 求两个整数的和  返回值:需要返回值 int     参数:2个参数  int a,int b
	public static int getSum(int a,int b){
		System.out.println("有返回类型有参数的方法");
		int sum=a+b;
		return sum;
		//return a+b;
	}
	
	//课后练习题
	//1.获取两个数中的较大值
	//2.比较两个数据是否相同
	
	
}
