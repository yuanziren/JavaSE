面向对象
	类和对象
		类
			成员变量
			成员方法
			属于类的
			静态变量
			静态的方法
			属于类
			static{}
			构造块{}
			构造器:特殊的方法,和new一起使用,初始化对象信息
			this:指new出来的对象
				在构造器的首行调用本类中的其他构造器 this(参数)
				区分同名变量问题 
			super:指代直接父类对象
				在构造器的首行调用父类中的其他构造器 super(参数),如果没有显示调用,会隐式默认调勇父类的空构造
				区分子父类同名变量问题 
			static:静态的
				类名.使用静态内容
				静态的属于类,而成员属于对象
				class Test{
					 Person p=new Person();
				}
				先静态后成员
			block:
				分类		使用时机     调用顺序
			权限修饰符: public protected default private 
			gc()
			javabean:一系列默认类的统称
			package import  class
			继承:
				提高代码的复用型
				根据子类抽象出公共的部分定义为父类
				抽象父类
				接口
			super
			重写:继承过来的功能不能完全满足需求,需要对方法进行重写
			重写和重载
			final:最终的
			Object:老祖宗
				toString
				equals
			多态:一种事物的多种形态
				继承为前提
				父类引用指向子类对象
				调用重写方法
				子类中新增方法对父类引用不可见
				成员变量:编译运行看父类
				成员方法:编译看父类,运行看子类
			转型:
				向上:自动
				向下:强制
			避免转型异常: instanceof
			抽象类:
			接口:
			推荐使用接口
	
	封装:隐藏内部的实现细节,对外提供公共的访问方式
	
	继承:子类继承父类就自动拥有父类中的成员+扩展
	
	多态:在继承和方法重写的前提下,父类引用调用子类中重写的方法,这是多态的目的,可以提高代码的服用型和扩展性
		类的多态
		抽象类多态
		接口多态